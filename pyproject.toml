[tool.poetry]
name = "renumics-spotlight"
version = "0.0.0"
description = "Visualize and maintain datasets to develop and understand data-driven algorithms."
homepage = "https://spotlight.renumics.com/"
documentation = "https://spotlight.renumics.com/"
readme = "README-PyPI.md"
repository = "https://github.com/renumics/spotlight"
keywords = [
  "data curation",
  "machine learning",
  "data science",
  "visualization",
  "pandas",
  "ai",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: FastAPI",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Manufacturing",
  "Intended Audience :: Information Technology",
  "Natural Language :: English",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: JavaScript",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Typing :: Typed",
]
authors = ["Renumics GmbH <info@renumics.com>"]
license = "MIT"
packages = [{ include = "renumics", from = "." }]
exclude = []

[tool.poetry.scripts]
spotlight = "renumics.spotlight.cli:main"

[tool.poetry.dependencies]
python = ">=3.8, <3.12"
numpy = "*"
tqdm = "*"
loguru = "*"
fastapi = ">=0.65.2"
orjson = "*"
pydantic = "^2.0.0"
uvicorn = ">=0.22"
aiofiles = "*"
click = "*"
h5py = ">3.0"
requests = ">=2.31"
umap-learn = "*"
typing-extensions = "*"
httptools = "*"
uvloop = [
  { version = ">=0.17.0", platform = "linux" },
  { version = ">=0.17.0", platform = "darwin" },
]
diskcache = "*"
appdirs = "*"
databases = { version = "*", extras = ["aiosqlite"] }
rsa = "*"
packaging = "*"
prettytable = "*"
networkx = "*"
trimesh = "*"
imageio = ">=2.18.0"
pygltflib = ">=1.15.1"
scikit-learn = "*"
pandas = "*"
importlib_resources = "<5.8.0"
scikit-image = "*"
imagecodecs = [{ version = "*", markers = 'platform_machine != "arm64"' }]
av = "*"
validators = "*"
ipywidgets = "*"
jinja2 = "*"
toml = "*"
cleanlab = "*"
websockets = "*"
cleanvision = "*"
py-machineid = "*"
filetype = "*"
setuptools = "*"
numba = "^0.57.1"
pillow = "^10.0.0"
httpx = "^0.23.0"
datasets = { extras = ["audio"], version = "^2.12.0" }
pydantic-settings = "^2.0.3"
pycatch22 = { version = "!=0.4.4", optional = true }
transformers = "^4.35.2"
pyarrow = "^14.0.2"

[tool.poetry.extras]
descriptors = ["pycatch22"]
all = ["pycatch22"]

[tool.poetry.group.dev.dependencies]
mypy = "*"
types-setuptools = "^57.4.14"
types-requests = "^2.27.20"
black = "^22.3.0"
pytest = "^7.4.2"
ipython = "^8.10.0"
jupyter = "^1.0.0"
watchdog = "^2.1.7"
argh = "^0.26.2"
typed-ast = "^1.5.3"
packaging = "^21.3"
nbmake = "^1.3.0"
selenium = "^4.1.3, <4.10"
diffimg = "^0.3.0"
safety = "^1.10.3"
typer = "^0.4.1"
pre-commit = "^2.19.0"
types-appdirs = "^1.4.3.1"
types-tqdm = "^4.64.7.11"
twine = "^4.0.2"
pdoc3 = "^0.10.0"
nptyping = "^2.5.0"
types-toml = "^0.10.8.6"
types-pillow = "^10.0.0.1"
pandas-stubs = "^2.0.2.230605"
ruff = "^0.0.281"
check-wheel-contents = "^0.6.0"
torch = { version = "^2.1.1+cpu", source = "torch-cpu" }

[tool.poetry.group.playbook.dependencies]
towhee = "^0.9.0"
annoy = "^1.17.2"
cleanlab = "^2.4.0"
torch = { version = "^2.1.1+cpu", source = "torch-cpu" }

[[tool.poetry.source]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poetry-dynamic-versioning.substitution]
files = ["renumics/spotlight/__version__.py"]

[tool.ruff]
ignore = ["E501"]

[tool.mypy]
ignore_missing_imports = false
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = "."
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = [
  "pygltflib",
  "av",
  "validators",
  "h5py",
  "pandas",
  "trimesh",
  "diskcache",
  "umap",
  "sklearn.*",
  "scipy.*",
  "skimage.*",
  "lesscpy",
  "ipywidgets",
  "dotenv",
  "pycatch22",
  "cleanlab.*",
  "machineid",
  "filetype",
  "datasets",
  "diffimg",
  "tests.ui._autogenerated_ui_elements",
  "transformers",
  "pyarrow.*",
]
ignore_missing_imports = true

[tool.check-wheel-contents]
ignore = ["W002"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=0.22.0"]
build-backend = "poetry_dynamic_versioning.backend"
