name: Setup Python and Poetry
author: Renumics GmbH
description: |
    Set up Python and Poetry environment as specified in .tool-versions file,
    cache/restore dependencies
inputs:
    python-version:
        description: Python version to set up (overrides .tool-versions)
        required: false
    install-dependencies:
        description: Whether to install and cache/restore dependencies
        default: 'true'
outputs:
    package-version:
        description: Spotlight version
        value: ${{ steps.get-package-version.outputs.package-version }}
    pip-cache-dir:
        description: Pip cache directory path of the current Python installation
        value: ${{ steps.get-package-version.outputs.pip-cache-dir }}
runs:
    using: composite
    steps:
        - name: Extract versions from .tool-versions
          id: tool-versions
          run: |
              if [[ -n "${{ inputs.python-version }}" ]]; then
                echo "python-version=${{ inputs.python-version }}" >> "$GITHUB_OUTPUT"
              else
                echo "python-version=$(awk '/^python / { print $2 }' .tool-versions)" >> "$GITHUB_OUTPUT"
              fi
              echo "poetry-version=$(awk '/^poetry / { print $2 }' .tool-versions)" >> "$GITHUB_OUTPUT"
          shell: bash
        - name: Set up Poetry ${{ steps.tool-versions.outputs.poetry-version }}
          run: |
              pipx install "poetry==${{ steps.tool-versions.outputs.poetry-version }}"
              pipx inject poetry poetry-dynamic-versioning poetry-plugin-export
              poetry config virtualenvs.in-project true
          shell: bash
        - name: Set up Python ${{ steps.tool-versions.outputs.python-version }} with cache
          id: setup-python-with-cache
          if: inputs.install-dependencies != 'false'
          uses: actions/setup-python@v6
          with:
              python-version: ${{ steps.tool-versions.outputs.python-version }}
              cache: poetry
        - name: Set up Python ${{ steps.tool-versions.outputs.python-version }}
          if: inputs.install-dependencies == 'false'
          uses: actions/setup-python@v6
          with:
              python-version: ${{ steps.tool-versions.outputs.python-version }}
        - name: Install dependencies
          if: inputs.install-dependencies != 'false' && steps.setup-python-with-cache.outputs.cache-hit != 'true'
          run: poetry sync --all-extras --without playbook --no-interaction
          shell: bash
        - name: Get Spotlight version
          id: get-package-version
          run: |
              echo "package-version=$(poetry version -s)" >> $GITHUB_OUTPUT
              echo "pip-cache-dir=$(python -m pip cache dir)" >> $GITHUB_OUTPUT
          shell: bash
