layout_poetry() {
  if [[ ! -f pyproject.toml ]]; then
    log_error 'No pyproject.toml found. Use `poetry new` or `poetry init` to create one first.'
    exit 2
  fi

  # create venv if it doesn't exist
  poetry run true

  export VIRTUAL_ENV=$(poetry env info --path)
  export POETRY_ACTIVE=1
  PATH_add "$VIRTUAL_ENV/bin"
}

dotenv
use asdf

export PIP_IGNORE_INSTALLED=1
layout poetry

pre-commit install --hook-type pre-commit
pre-commit install --hook-type pre-push

# source local envrc for any additional local defines and overrides (e.g. a different BUILD_VARIANT)
[[ -f .envrc.local ]] && source_env .envrc.local
