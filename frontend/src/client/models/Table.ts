/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Column } from './Column';
import { ColumnFromJSON, ColumnFromJSONTyped, ColumnToJSON } from './Column';

/**
 * a table slice
 * @export
 * @interface Table
 */
export interface Table {
    /**
     *
     * @type {string}
     * @memberof Table
     */
    uid: string;
    /**
     *
     * @type {string}
     * @memberof Table
     */
    filename: string;
    /**
     *
     * @type {Array<Column>}
     * @memberof Table
     */
    columns: Array<Column>;
    /**
     *
     * @type {boolean}
     * @memberof Table
     */
    maxRowsHit: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Table
     */
    maxColumnsHit: boolean;
    /**
     *
     * @type {number}
     * @memberof Table
     */
    generationId: number;
}

/**
 * Check if a given object implements the Table interface.
 */
export function instanceOfTable(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'uid' in value;
    isInstance = isInstance && 'filename' in value;
    isInstance = isInstance && 'columns' in value;
    isInstance = isInstance && 'maxRowsHit' in value;
    isInstance = isInstance && 'maxColumnsHit' in value;
    isInstance = isInstance && 'generationId' in value;

    return isInstance;
}

export function TableFromJSON(json: any): Table {
    return TableFromJSONTyped(json, false);
}

export function TableFromJSONTyped(json: any, ignoreDiscriminator: boolean): Table {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        uid: json['uid'],
        filename: json['filename'],
        columns: (json['columns'] as Array<any>).map(ColumnFromJSON),
        maxRowsHit: json['max_rows_hit'],
        maxColumnsHit: json['max_columns_hit'],
        generationId: json['generation_id'],
    };
}

export function TableToJSON(value?: Table | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        uid: value.uid,
        filename: value.filename,
        columns: (value.columns as Array<any>).map(ColumnToJSON),
        max_rows_hit: value.maxRowsHit,
        max_columns_hit: value.maxColumnsHit,
        generation_id: value.generationId,
    };
}
